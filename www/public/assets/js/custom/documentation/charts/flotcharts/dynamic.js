/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/theme/js/custom/documentation/charts/flotcharts/dynamic.js":
/*!******************************************************************************!*\
  !*** ./resources/theme/js/custom/documentation/charts/flotcharts/dynamic.js ***!
  \******************************************************************************/
/***/ (() => {

eval(" // Class definition\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar KTFlotDemoDynamic = function () {\n  // Private functions\n  var exampleDynamic = function exampleDynamic() {\n    var _options;\n\n    var data = [];\n    var totalPoints = 250; // random data generator for plot charts\n\n    function getRandomData() {\n      if (data.length > 0) data = data.slice(1); // do a random walk\n\n      while (data.length < totalPoints) {\n        var prev = data.length > 0 ? data[data.length - 1] : 50;\n        var y = prev + Math.random() * 10 - 5;\n        if (y < 0) y = 0;\n        if (y > 100) y = 100;\n        data.push(y);\n      } // zip the generated y values with the x values\n\n\n      var res = [];\n\n      for (var i = 0; i < data.length; ++i) {\n        res.push([i, data[i]]);\n      }\n\n      return res;\n    } //server load\n\n\n    var options = (_options = {\n      colors: [KTUtil.getCssVariableValue('--bs-active-danger'), KTUtil.getCssVariableValue('--bs-active-primary')],\n      series: {\n        shadowSize: 1\n      },\n      lines: {\n        show: true,\n        lineWidth: 0.5,\n        fill: true,\n        fillColor: {\n          colors: [{\n            opacity: 0.1\n          }, {\n            opacity: 1\n          }]\n        }\n      },\n      yaxis: {\n        min: 0,\n        max: 100,\n        tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n        tickFormatter: function tickFormatter(v) {\n          return v + \"%\";\n        }\n      },\n      xaxis: {\n        show: false\n      }\n    }, _defineProperty(_options, \"colors\", [KTUtil.getCssVariableValue('--bs-active-primary')]), _defineProperty(_options, \"grid\", {\n      tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n      borderWidth: 0\n    }), _options);\n    var updateInterval = 30;\n    var plot = $.plot($(\"#kt_docs_flot_dynamic\"), [getRandomData()], options);\n\n    function update() {\n      plot.setData([getRandomData()]);\n      plot.draw();\n      setTimeout(update, updateInterval);\n    }\n\n    update();\n  };\n\n  return {\n    // Public Functions\n    init: function init() {\n      exampleDynamic();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTFlotDemoDynamic.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvdGhlbWUvanMvY3VzdG9tL2RvY3VtZW50YXRpb24vY2hhcnRzL2Zsb3RjaGFydHMvZHluYW1pYy5qcy5qcyIsIm1hcHBpbmdzIjoiQ0FFQTs7OztBQUNBLElBQUlBLGlCQUFpQixHQUFHLFlBQVk7QUFDaEM7QUFDQSxNQUFJQyxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLEdBQVk7QUFBQTs7QUFDN0IsUUFBSUMsSUFBSSxHQUFHLEVBQVg7QUFDTixRQUFJQyxXQUFXLEdBQUcsR0FBbEIsQ0FGbUMsQ0FJbkM7O0FBRUEsYUFBU0MsYUFBVCxHQUF5QjtBQUN4QixVQUFJRixJQUFJLENBQUNHLE1BQUwsR0FBYyxDQUFsQixFQUFxQkgsSUFBSSxHQUFHQSxJQUFJLENBQUNJLEtBQUwsQ0FBVyxDQUFYLENBQVAsQ0FERyxDQUV4Qjs7QUFDQSxhQUFPSixJQUFJLENBQUNHLE1BQUwsR0FBY0YsV0FBckIsRUFBa0M7QUFDakMsWUFBSUksSUFBSSxHQUFHTCxJQUFJLENBQUNHLE1BQUwsR0FBYyxDQUFkLEdBQWtCSCxJQUFJLENBQUNBLElBQUksQ0FBQ0csTUFBTCxHQUFjLENBQWYsQ0FBdEIsR0FBMEMsRUFBckQ7QUFDQSxZQUFJRyxDQUFDLEdBQUdELElBQUksR0FBR0UsSUFBSSxDQUFDQyxNQUFMLEtBQWdCLEVBQXZCLEdBQTRCLENBQXBDO0FBQ0EsWUFBSUYsQ0FBQyxHQUFHLENBQVIsRUFBV0EsQ0FBQyxHQUFHLENBQUo7QUFDWCxZQUFJQSxDQUFDLEdBQUcsR0FBUixFQUFhQSxDQUFDLEdBQUcsR0FBSjtBQUNiTixRQUFBQSxJQUFJLENBQUNTLElBQUwsQ0FBVUgsQ0FBVjtBQUNBLE9BVHVCLENBVXhCOzs7QUFDQSxVQUFJSSxHQUFHLEdBQUcsRUFBVjs7QUFDQSxXQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdYLElBQUksQ0FBQ0csTUFBekIsRUFBaUMsRUFBRVEsQ0FBbkMsRUFBc0M7QUFDckNELFFBQUFBLEdBQUcsQ0FBQ0QsSUFBSixDQUFTLENBQUNFLENBQUQsRUFBSVgsSUFBSSxDQUFDVyxDQUFELENBQVIsQ0FBVDtBQUNBOztBQUVELGFBQU9ELEdBQVA7QUFDQSxLQXZCa0MsQ0F5Qm5DOzs7QUFDQSxRQUFJRSxPQUFPO0FBQ1ZDLE1BQUFBLE1BQU0sRUFBRSxDQUFDQyxNQUFNLENBQUNDLG1CQUFQLENBQTJCLG9CQUEzQixDQUFELEVBQW1ERCxNQUFNLENBQUNDLG1CQUFQLENBQTJCLHFCQUEzQixDQUFuRCxDQURFO0FBRVZDLE1BQUFBLE1BQU0sRUFBRTtBQUNQQyxRQUFBQSxVQUFVLEVBQUU7QUFETCxPQUZFO0FBS1ZDLE1BQUFBLEtBQUssRUFBRTtBQUNOQyxRQUFBQSxJQUFJLEVBQUUsSUFEQTtBQUVOQyxRQUFBQSxTQUFTLEVBQUUsR0FGTDtBQUdOQyxRQUFBQSxJQUFJLEVBQUUsSUFIQTtBQUlOQyxRQUFBQSxTQUFTLEVBQUU7QUFDVlQsVUFBQUEsTUFBTSxFQUFFLENBQUM7QUFDUlUsWUFBQUEsT0FBTyxFQUFFO0FBREQsV0FBRCxFQUVMO0FBQ0ZBLFlBQUFBLE9BQU8sRUFBRTtBQURQLFdBRks7QUFERTtBQUpMLE9BTEc7QUFpQlZDLE1BQUFBLEtBQUssRUFBRTtBQUNOQyxRQUFBQSxHQUFHLEVBQUUsQ0FEQztBQUVOQyxRQUFBQSxHQUFHLEVBQUUsR0FGQztBQUdOQyxRQUFBQSxTQUFTLEVBQUViLE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkIsaUJBQTNCLENBSEw7QUFJTmEsUUFBQUEsYUFBYSxFQUFFLHVCQUFTQyxDQUFULEVBQVk7QUFDMUIsaUJBQU9BLENBQUMsR0FBRyxHQUFYO0FBQ0E7QUFOSyxPQWpCRztBQXlCVkMsTUFBQUEsS0FBSyxFQUFFO0FBQ05YLFFBQUFBLElBQUksRUFBRTtBQURBO0FBekJHLDJDQTRCRixDQUFDTCxNQUFNLENBQUNDLG1CQUFQLENBQTJCLHFCQUEzQixDQUFELENBNUJFLHFDQTZCSjtBQUNMWSxNQUFBQSxTQUFTLEVBQUViLE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkIsaUJBQTNCLENBRE47QUFFTGdCLE1BQUFBLFdBQVcsRUFBRTtBQUZSLEtBN0JJLFlBQVg7QUFtQ0EsUUFBSUMsY0FBYyxHQUFHLEVBQXJCO0FBQ0EsUUFBSUMsSUFBSSxHQUFHQyxDQUFDLENBQUNELElBQUYsQ0FBT0MsQ0FBQyxDQUFDLHVCQUFELENBQVIsRUFBbUMsQ0FBQ2hDLGFBQWEsRUFBZCxDQUFuQyxFQUFzRFUsT0FBdEQsQ0FBWDs7QUFFQSxhQUFTdUIsTUFBVCxHQUFrQjtBQUNqQkYsTUFBQUEsSUFBSSxDQUFDRyxPQUFMLENBQWEsQ0FBQ2xDLGFBQWEsRUFBZCxDQUFiO0FBQ0ErQixNQUFBQSxJQUFJLENBQUNJLElBQUw7QUFDQUMsTUFBQUEsVUFBVSxDQUFDSCxNQUFELEVBQVNILGNBQVQsQ0FBVjtBQUNBOztBQUVERyxJQUFBQSxNQUFNO0FBQ0gsR0F2RUQ7O0FBeUVBLFNBQU87QUFDSDtBQUNBSSxJQUFBQSxJQUFJLEVBQUUsZ0JBQVk7QUFDZHhDLE1BQUFBLGNBQWM7QUFDakI7QUFKRSxHQUFQO0FBTUgsQ0FqRnVCLEVBQXhCLEMsQ0FtRkE7OztBQUNBZSxNQUFNLENBQUMwQixrQkFBUCxDQUEwQixZQUFZO0FBQ2xDMUMsRUFBQUEsaUJBQWlCLENBQUN5QyxJQUFsQjtBQUNILENBRkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvdGhlbWUvanMvY3VzdG9tL2RvY3VtZW50YXRpb24vY2hhcnRzL2Zsb3RjaGFydHMvZHluYW1pYy5qcz9jZjI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyBDbGFzcyBkZWZpbml0aW9uXG52YXIgS1RGbG90RGVtb0R5bmFtaWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gUHJpdmF0ZSBmdW5jdGlvbnNcbiAgICB2YXIgZXhhbXBsZUR5bmFtaWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkYXRhID0gW107XG5cdFx0dmFyIHRvdGFsUG9pbnRzID0gMjUwO1xuXG5cdFx0Ly8gcmFuZG9tIGRhdGEgZ2VuZXJhdG9yIGZvciBwbG90IGNoYXJ0c1xuXG5cdFx0ZnVuY3Rpb24gZ2V0UmFuZG9tRGF0YSgpIHtcblx0XHRcdGlmIChkYXRhLmxlbmd0aCA+IDApIGRhdGEgPSBkYXRhLnNsaWNlKDEpO1xuXHRcdFx0Ly8gZG8gYSByYW5kb20gd2Fsa1xuXHRcdFx0d2hpbGUgKGRhdGEubGVuZ3RoIDwgdG90YWxQb2ludHMpIHtcblx0XHRcdFx0dmFyIHByZXYgPSBkYXRhLmxlbmd0aCA+IDAgPyBkYXRhW2RhdGEubGVuZ3RoIC0gMV0gOiA1MDtcblx0XHRcdFx0dmFyIHkgPSBwcmV2ICsgTWF0aC5yYW5kb20oKSAqIDEwIC0gNTtcblx0XHRcdFx0aWYgKHkgPCAwKSB5ID0gMDtcblx0XHRcdFx0aWYgKHkgPiAxMDApIHkgPSAxMDA7XG5cdFx0XHRcdGRhdGEucHVzaCh5KTtcblx0XHRcdH1cblx0XHRcdC8vIHppcCB0aGUgZ2VuZXJhdGVkIHkgdmFsdWVzIHdpdGggdGhlIHggdmFsdWVzXG5cdFx0XHR2YXIgcmVzID0gW107XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyArK2kpIHtcblx0XHRcdFx0cmVzLnB1c2goW2ksIGRhdGFbaV1dKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHJlcztcblx0XHR9XG5cblx0XHQvL3NlcnZlciBsb2FkXG5cdFx0dmFyIG9wdGlvbnMgPSB7XG5cdFx0XHRjb2xvcnM6IFtLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1hY3RpdmUtZGFuZ2VyJyksIEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWFjdGl2ZS1wcmltYXJ5JyldLFxuXHRcdFx0c2VyaWVzOiB7XG5cdFx0XHRcdHNoYWRvd1NpemU6IDFcblx0XHRcdH0sXG5cdFx0XHRsaW5lczoge1xuXHRcdFx0XHRzaG93OiB0cnVlLFxuXHRcdFx0XHRsaW5lV2lkdGg6IDAuNSxcblx0XHRcdFx0ZmlsbDogdHJ1ZSxcblx0XHRcdFx0ZmlsbENvbG9yOiB7XG5cdFx0XHRcdFx0Y29sb3JzOiBbe1xuXHRcdFx0XHRcdFx0b3BhY2l0eTogMC4xXG5cdFx0XHRcdFx0fSwge1xuXHRcdFx0XHRcdFx0b3BhY2l0eTogMVxuXHRcdFx0XHRcdH1dXG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHR5YXhpczoge1xuXHRcdFx0XHRtaW46IDAsXG5cdFx0XHRcdG1heDogMTAwLFxuXHRcdFx0XHR0aWNrQ29sb3I6IEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWxpZ2h0LWRhcmsnKSxcblx0XHRcdFx0dGlja0Zvcm1hdHRlcjogZnVuY3Rpb24odikge1xuXHRcdFx0XHRcdHJldHVybiB2ICsgXCIlXCI7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHR4YXhpczoge1xuXHRcdFx0XHRzaG93OiBmYWxzZSxcblx0XHRcdH0sXG5cdFx0XHRjb2xvcnM6IFtLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1hY3RpdmUtcHJpbWFyeScpXSxcblx0XHRcdGdyaWQ6IHtcblx0XHRcdFx0dGlja0NvbG9yOiBLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1saWdodC1kYXJrJyksXG5cdFx0XHRcdGJvcmRlcldpZHRoOiAwLFxuXHRcdFx0fVxuXHRcdH07XG5cblx0XHR2YXIgdXBkYXRlSW50ZXJ2YWwgPSAzMDtcblx0XHR2YXIgcGxvdCA9ICQucGxvdCgkKFwiI2t0X2RvY3NfZmxvdF9keW5hbWljXCIpLCBbZ2V0UmFuZG9tRGF0YSgpXSwgb3B0aW9ucyk7XG5cblx0XHRmdW5jdGlvbiB1cGRhdGUoKSB7XG5cdFx0XHRwbG90LnNldERhdGEoW2dldFJhbmRvbURhdGEoKV0pO1xuXHRcdFx0cGxvdC5kcmF3KCk7XG5cdFx0XHRzZXRUaW1lb3V0KHVwZGF0ZSwgdXBkYXRlSW50ZXJ2YWwpO1xuXHRcdH1cblxuXHRcdHVwZGF0ZSgpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIC8vIFB1YmxpYyBGdW5jdGlvbnNcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZXhhbXBsZUR5bmFtaWMoKTtcbiAgICAgICAgfVxuICAgIH07XG59KCk7XG5cbi8vIE9uIGRvY3VtZW50IHJlYWR5XG5LVFV0aWwub25ET01Db250ZW50TG9hZGVkKGZ1bmN0aW9uICgpIHtcbiAgICBLVEZsb3REZW1vRHluYW1pYy5pbml0KCk7XG59KTtcbiJdLCJuYW1lcyI6WyJLVEZsb3REZW1vRHluYW1pYyIsImV4YW1wbGVEeW5hbWljIiwiZGF0YSIsInRvdGFsUG9pbnRzIiwiZ2V0UmFuZG9tRGF0YSIsImxlbmd0aCIsInNsaWNlIiwicHJldiIsInkiLCJNYXRoIiwicmFuZG9tIiwicHVzaCIsInJlcyIsImkiLCJvcHRpb25zIiwiY29sb3JzIiwiS1RVdGlsIiwiZ2V0Q3NzVmFyaWFibGVWYWx1ZSIsInNlcmllcyIsInNoYWRvd1NpemUiLCJsaW5lcyIsInNob3ciLCJsaW5lV2lkdGgiLCJmaWxsIiwiZmlsbENvbG9yIiwib3BhY2l0eSIsInlheGlzIiwibWluIiwibWF4IiwidGlja0NvbG9yIiwidGlja0Zvcm1hdHRlciIsInYiLCJ4YXhpcyIsImJvcmRlcldpZHRoIiwidXBkYXRlSW50ZXJ2YWwiLCJwbG90IiwiJCIsInVwZGF0ZSIsInNldERhdGEiLCJkcmF3Iiwic2V0VGltZW91dCIsImluaXQiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/theme/js/custom/documentation/charts/flotcharts/dynamic.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/theme/js/custom/documentation/charts/flotcharts/dynamic.js"]();
/******/ 	
/******/ })()
;